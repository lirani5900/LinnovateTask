name: EKS Deployment

on:
  push:
    branches:
      - development
      - master
  workflow_dispatch:
    branches:
      - master

env:
  AWS_REGION: us-east-1
  IMAGE_REPO_NAME: linnovate-task
  IMAGE_TAG: latest
  CLUSTER_NAME: LinnovateTask
  DEV_NODEGROUP_NAME: DevLinnovate
  MASTER_NODEGROUP_NAME: MasterLinnovate
  KUBECONFIG_DEV: /tmp/kubeconfig-dev.yaml
  KUBECONFIG_MASTER: /tmp/kubeconfig-master.yaml
  
jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Start Docker service
        run: sudo service docker start
      - name: Login to Docker Hub and push Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          IMAGE_REPO_NAME: linnovate-task
          IMAGE_TAG: latest
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker-compose build
          docker-compose push
          
      - name: Deploy to EKS (development)
        if: github.ref == 'refs/heads/development' && github.event_name == 'push'
        env:
          KUBECONFIG: ${{ env.KUBECONFIG_DEV }}
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --kubeconfig ${{ env.KUBECONFIG_DEV }}
          kubectl config use-context ${{ env.CLUSTER_NAME }}
          kubectl apply -f k8s/dev/
          
      - name: Deploy to EKS (master)
        if: github.ref == 'refs/heads/master' && github.event_name == 'workflow_dispatch'
        env:
          KUBECONFIG: ${{ env.KUBECONFIG_MASTER }}
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --kubeconfig ${{ env.KUBECONFIG_MASTER }}
          kubectl config use-context ${{ env.CLUSTER_NAME }}
          kubectl apply -f k8s/prod/
