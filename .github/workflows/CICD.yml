name: EKS Deployment

on:
  push:
    branches:
      - development
  workflow_dispatch:
    branches:
      - master

env:
  AWS_REGION: us-east-1
  IMAGE_REPO_NAME: linnovate-task
  IMAGE_TAG: latest
  CLUSTER_NAME: LinnovateTask
  DEV_NODEGROUP_NAME: DevLinnovate
  MASTER_NODEGROUP_NAME: MasterLinnovate
  DOCKERHUB_USERNAME: <your Docker Hub username>
  DOCKERHUB_PASSWORD: <your Docker Hub password>
  KUBECONFIG_DEV: /tmp/kubeconfig-dev.yaml
  KUBECONFIG_MASTER: /tmp/kubeconfig-master.yaml
  
jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE_REPO_NAME }}:${{ github.sha }}
      - name: Deploy to EKS (development)
        if: github.ref == 'refs/heads/development' && github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        env:
          KUBECONFIG: ${{ env.KUBECONFIG_DEV }}
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --kubeconfig ${{ env.KUBECONFIG_DEV }}
          kubectl config use-context ${{ env.CLUSTER_NAME }}
          kubectl set image deployment/my-app my-app=${{ env.IMAGE_REPO_NAME }}:${{ github.sha }} -n dev
          kubectl rollout status deployment/my-app -n dev
      - name: Deploy to EKS (master)
        if: github.ref == 'refs/heads/master' && github.event_name == 'workflow_dispatch'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        env:
          KUBECONFIG: ${{ env.KUBECONFIG_MASTER }}
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --kubeconfig ${{ env.KUBECONFIG_MASTER }}
          kubectl config use-context ${{ env.CLUSTER_NAME }}
          kubectl set image deployment/my-app my-app=${{ env.IMAGE_REPO_NAME }}:${{ github.sha }} -n prod
          kubectl rollout status deployment/my-app -n prod
